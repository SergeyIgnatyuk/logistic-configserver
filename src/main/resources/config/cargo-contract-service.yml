spring:
  datasource:
    driver-class-name: org.postgresql.Driver
  jpa:
    generate-ddl: false
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    hibernate:
      ddl-auto: validate
      naming-strategy: org.hibernate.cfg.ImplicitNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        globally_quoted_identifiers: true
        physical_naming_strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit_naming_strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  cloud:
    openfeign:
      client:
        config:
          logistic-bp:
            request-interceptors:
              - by.cargocontractservice.interceptor.UserContextRequestInterceptor
management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: "*"
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://logistic-discoveryserver:8070/eureka/
resilience4j:
  circuitbreaker:
    instances:
      cargoContractService:
        registerHealthIndicator: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
      logisticBp:
        registerHealthIndicator: true
        waitDurationInOpenState: 20s
        failureRateThreshold: 60
