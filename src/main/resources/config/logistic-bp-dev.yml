spring:
  datasource:
    url: jdbc:postgresql://logistic-camunda-db:5432/camunda
    username: postgres
    password: postgres
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: logistic-bp
            client-secret: 2cwLPJwU7V7uV0izAkIuInTcZQETrtQj
            client-name: Logistic BP
            authorization-grant-type: authorization_code
            scope: openid, profile, email
        provider:
          keycloak:
            issuer-uri: http://logistic-keycloak:8080/realms/logistic-realm
            token-uri: http://logistic-keycloak:8080/realms/logistic-realm/protocol/openid-connect/token
      resourceserver:
        jwt:
          issuer-uri: http://logistic-keycloak:8080/realms/logistic-realm
camunda:
  bpm:
    admin-user:
      id: user
      password: user
